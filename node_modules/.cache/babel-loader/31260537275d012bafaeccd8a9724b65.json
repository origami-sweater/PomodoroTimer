{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelse\\\\OneDrive\\\\Desktop\\\\react-apps\\\\pomodoro-timer\\\\src\\\\pomodoro\\\\TimerBar.js\";\nimport React, { useState } from \"react\";\n\nfunction TimerBar({\n  session\n}) {\n  if (session != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 19\n      }\n    }, \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? convertMS(focusDuration) : convertMS(breakDuration), \" \"), \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, convertMS(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": progressbarStyle(focusDuration, breakDuration, session) // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: `${100 - progressbarStyle(focusDuration, breakDuration, session)}%`\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    })))));\n  } else {\n    return null;\n  }\n}\n\nexport default TimerBar;","map":{"version":3,"sources":["C:/Users/kelse/OneDrive/Desktop/react-apps/pomodoro-timer/src/pomodoro/TimerBar.js"],"names":["React","useState","TimerBar","session","label","convertMS","focusDuration","breakDuration","timeRemaining","height","progressbarStyle","width"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA6B;AACzB,MAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEC,KADZ,uBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQ,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAnB,GAAgCC,SAAS,CAACC,aAAD,CAAzC,GAA2DD,SAAS,CAACE,aAAD,CAA5E,MAFF,YAFF,eAQE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,SAAS,CAACF,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEK,aAAV,CADZ,eARF,CADJ,CADF,eAeI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAeC,gBAAgB,CAACJ,aAAD,EAAgBC,aAAhB,EAA+BJ,OAA/B,CALjC,CAK0E;AAL1E;AAME,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAG,GAAE,MAAMD,gBAAgB,CAACJ,aAAD,EAAgBC,aAAhB,EAA+BJ,OAA/B,CAAwC;AAA1E,OANT,CAMyF;AANzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAfJ,CADF;AA+BE,GAhCJ,MAgCU;AACN,WAAO,IAAP;AACD;AACJ;;AAED,eAAeD,QAAf","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\n\r\nfunction TimerBar({session}) {\r\n    if (session != null) {\r\n      return (\r\n        <div>\r\n          <div className=\"row mb-2\">\r\n              <div className=\"col\">\r\n                {/* Session & Total Session Time*/}\r\n                <h2 data-testid=\"session-title\">\r\n                  {session?.label} for \r\n                  <span> {session?.label === \"Focusing\" ? convertMS(focusDuration) : convertMS(breakDuration)} </span>\r\n                  minutes\r\n                </h2>\r\n                {/* Countdown Timer */}\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                  {convertMS(session?.timeRemaining)} remaining\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col\">\r\n                <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                  <div\r\n                    className=\"progress-bar\"\r\n                    role=\"progressbar\"\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    aria-valuenow={progressbarStyle(focusDuration, breakDuration, session)} // TODO: Increase aria-valuenow as elapsed time increases\r\n                    style={{ width: `${100 - progressbarStyle(focusDuration, breakDuration, session)}%` }} // TODO: Increase width % as elapsed time increases\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      )} else {\r\n        return null;\r\n      }\r\n  }\r\n\r\n  export default TimerBar;"]},"metadata":{},"sourceType":"module"}