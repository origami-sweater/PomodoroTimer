{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelse\\\\OneDrive\\\\Desktop\\\\react-apps\\\\pomodoro-timer\\\\src\\\\pomodoro\\\\ProgressBarStyle.js\";\nimport React from \"react\";\n\nfunction progressBarStyle({\n  focusDuration,\n  breakDuration,\n  session\n}) {\n  let amt;\n\n  if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n    amt = session.timeRemaining / focusDuration * 100;\n  } else {\n    amt = session.timeRemaining / breakDuration * 100;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, \"className=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" aria-valuenow=\", progressbarStyle(focusDuration, breakDuration, session), \" // TODO: Increase aria-valuenow as elapsed time increases style=\", {\n    width: `${100 - progressbarStyle(focusDuration, breakDuration, session)}%`\n  });\n}\n\nexport default progressBarStyle;","map":{"version":3,"sources":["C:/Users/kelse/OneDrive/Desktop/react-apps/pomodoro-timer/src/pomodoro/ProgressBarStyle.js"],"names":["React","progressBarStyle","focusDuration","breakDuration","session","amt","label","timeRemaining","progressbarStyle","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,gBAAT,CAA0B;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA;AAA/B,CAA1B,EAAkE;AAEhE,MAAIC,GAAJ;;AACA,MAAI,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,KAAT,MAAmB,UAAvB,EAAmC;AAC/BD,IAAAA,GAAG,GAAED,OAAO,CAACG,aAAR,GAAwBL,aAAxB,GAAwC,GAA7C;AACD,GAFH,MAES;AACLG,IAAAA,GAAG,GAAED,OAAO,CAACG,aAAR,GAAwBJ,aAAxB,GAAwC,GAA7C;AACD;;AAEH,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAKiBK,gBAAgB,CAACN,aAAD,EAAgBC,aAAhB,EAA+BC,OAA/B,CALjC,uEAMS;AAAEK,IAAAA,KAAK,EAAG,GAAE,MAAMD,gBAAgB,CAACN,aAAD,EAAgBC,aAAhB,EAA+BC,OAA/B,CAAwC;AAA1E,GANT,CADA;AAUD;;AAED,eAAeH,gBAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction progressBarStyle({focusDuration, breakDuration, session}){\r\n  \r\n  let amt;\r\n  if (session?.label === \"Focusing\") {\r\n      amt= session.timeRemaining / focusDuration * 100;\r\n    } else {\r\n      amt= session.timeRemaining / breakDuration * 100;\r\n    }\r\n\r\n  return(\r\n  <div>\r\n    className=\"progress-bar\"\r\n    role=\"progressbar\"\r\n    aria-valuemin=\"0\"\r\n    aria-valuemax=\"100\"\r\n    aria-valuenow={progressbarStyle(focusDuration, breakDuration, session)} // TODO: Increase aria-valuenow as elapsed time increases\r\n    style={{ width: `${100 - progressbarStyle(focusDuration, breakDuration, session)}%` }}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default progressBarStyle;"]},"metadata":{},"sourceType":"module"}