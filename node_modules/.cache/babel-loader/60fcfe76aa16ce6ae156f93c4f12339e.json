{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelse\\\\OneDrive\\\\Desktop\\\\react-apps\\\\pomodoro-timer\\\\src\\\\pomodoro\\\\ProgressBarStyle.js\";\nimport React from \"react\";\n\nfunction progressBarStyle({\n  focusDuration,\n  breakDuration,\n  session\n}) {\n  if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n    const amt = session.timeRemaining / focusDuration * 100;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, \"className=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" aria-valuenow=\", amt, \" // TODO: Increase aria-valuenow as elapsed time increases style=\", {\n      width: `${100 - amt}%`\n    });\n  } else {\n    const amt = session.timeRemaining / breakDuration * 100;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"className=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" aria-valuenow=\", amt, \" // TODO: Increase aria-valuenow as elapsed time increases style=\", {\n      width: `${100 - amt}%`\n    });\n  }\n}\n\nexport default progressBarStyle;","map":{"version":3,"sources":["C:/Users/kelse/OneDrive/Desktop/react-apps/pomodoro-timer/src/pomodoro/ProgressBarStyle.js"],"names":["React","progressBarStyle","focusDuration","breakDuration","session","label","amt","timeRemaining","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,gBAAT,CAA0B;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA;AAA/B,CAA1B,EAAkE;AAEhE,MAAI,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,MAAmB,UAAvB,EAAmC;AAC/B,UAAMC,GAAG,GAAEF,OAAO,CAACG,aAAR,GAAwBL,aAAxB,GAAwC,GAAnD;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mHAKiBI,GALjB,uEAMS;AAAEE,MAAAA,KAAK,EAAG,GAAE,MAAMF,GAAI;AAAtB,KANT,CADF;AAUD,GAZH,MAYS;AACL,UAAMA,GAAG,GAAEF,OAAO,CAACG,aAAR,GAAwBJ,aAAxB,GAAwC,GAAnD;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mHAKiBG,GALjB,uEAMS;AAAEE,MAAAA,KAAK,EAAG,GAAE,MAAMF,GAAI;AAAtB,KANT,CADF;AAUD;AAGJ;;AAED,eAAeL,gBAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction progressBarStyle({focusDuration, breakDuration, session}){\r\n  \r\n  if (session?.label === \"Focusing\") {\r\n      const amt= session.timeRemaining / focusDuration * 100;\r\n      return(\r\n        <div>\r\n          className=\"progress-bar\"\r\n          role=\"progressbar\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          aria-valuenow={amt} // TODO: Increase aria-valuenow as elapsed time increases\r\n          style={{ width: `${100 - amt}%` }}\r\n        </div>\r\n        )\r\n    } else {\r\n      const amt= session.timeRemaining / breakDuration * 100;\r\n      return(\r\n        <div>\r\n          className=\"progress-bar\"\r\n          role=\"progressbar\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          aria-valuenow={amt} // TODO: Increase aria-valuenow as elapsed time increases\r\n          style={{ width: `${100 - amt}%` }}\r\n        </div>\r\n        )\r\n    }\r\n\r\n  \r\n}\r\n\r\nexport default progressBarStyle;"]},"metadata":{},"sourceType":"module"}