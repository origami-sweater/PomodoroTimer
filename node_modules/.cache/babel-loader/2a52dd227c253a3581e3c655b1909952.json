{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelse\\\\OneDrive\\\\Desktop\\\\react-apps\\\\pomodoro-timer\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\"; // These functions are defined outside of the component to ensure they do not have access to state\n// and are, therefore, more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n//helper function to convert seconds to hhmmss - made by other coder, adjusted to remove hours\n\n\nfunction convertMS(value) {\n  const sec = parseInt(value, 10); // convert value to number if it's string\n\n  let minutes = Math.floor(sec / 60); // get minutes\n\n  let seconds = sec - minutes * 60; //  get seconds\n  // add 0 if value < 10; Example: 2 => 02\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n\n  return minutes + ':' + seconds; // Return is MM : SS\n}\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(1500);\n  const [breakDuration, setBreakDuration] = useState(300); //__________________________________________Button Events___________________________________________________________________________________\n\n  const decreaseFocusDuration = event => {\n    //for decreasing focus time\n    if (session === null) {\n      if (focusDuration > 300) {\n        setFocusDuration(focusDuration - 300);\n      } else {\n        alert(\"knock it off\");\n      }\n    }\n  };\n\n  const increaseFocusDuration = event => {\n    //for increasing focus time\n    if (session === null) {\n      if (focusDuration < 3600) {\n        setFocusDuration(focusDuration + 300);\n      } else {\n        alert(\"knock it off\");\n      }\n    }\n  };\n\n  const decreaseBreakDuration = event => {\n    //for decreasing break time\n    if (session === null) {\n      if (breakDuration > 60) {\n        setBreakDuration(breakDuration - 60);\n      } else {\n        alert(\"knock it off\");\n      }\n    }\n  };\n\n  const increaseBreakDuration = event => {\n    //for increasing break time\n    if (session === null) {\n      if (breakDuration < 900) {\n        setBreakDuration(breakDuration + 60);\n      } else {\n        alert(\"knock it off\");\n      }\n    }\n  };\n\n  const handleStopButton = event => {\n    if (session !== null) {\n      setIsTimerRunning(false);\n      setSession(null);\n    }\n  };\n\n  function progressbarStyle() {\n    if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n      const amt = focusDuration / session.timeRemaining;\n      return `\"${amt}%\"`;\n    } else {\n      const amt = breakDuration / session.timeRemaining;\n      return `\"${amt}%\"`;\n    }\n  } //function that toggles timer info for active session\n\n\n  function showTime(session) {\n    if (session != null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        \"data-testid\": \"session-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, session === null || session === void 0 ? void 0 : session.label, \" for\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? convertMS(focusDuration) : convertMS(breakDuration), \" \"), \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        \"data-testid\": \"session-sub-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, convertMS(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress\",\n        style: {\n          height: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress-bar\",\n        role: \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n        ,\n        style: {\n          width: {\n            progressbarStyle\n          }\n        } // TODO: Increase width % as elapsed time increases\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 19\n        }\n      })))));\n    } else {\n      return null;\n    }\n  }\n  /* if (session.timeRemaining )\n  // breakDuration / session.timeRemaining   \n  //{session?.label === \"Focusing\" ? focusDuration/session.timeRemaining : breakDuration/session.timeRemaining}\n  function progressbarStyle(){\n    if (session?.label === \"Focusing\") {\n      const amt= focusDuration/session.timeRemaining\n      return `${amt}%`\n    } else {\n      const amt= breakDuration/session.timeRemaining\n      return `${amt}%`\n    }\n  }\n  */\n  //_____________________________________________________________________________________________________-\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", convertMS(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: decreaseFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: increaseFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", convertMS(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: decreaseBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: increaseBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: handleStopButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }))))), showTime(session));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/kelse/OneDrive/Desktop/react-apps/pomodoro-timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","nextTick","prevState","timeRemaining","Math","max","convertMS","value","sec","parseInt","minutes","floor","seconds","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","decreaseFocusDuration","event","alert","increaseFocusDuration","decreaseBreakDuration","increaseBreakDuration","handleStopButton","progressbarStyle","amt","showTime","height","width","Audio","play","playPause","nextState","prevStateSession","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\n// These functions are defined outside of the component to ensure they do not have access to state\n// and are, therefore, more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n//helper function to convert seconds to hhmmss - made by other coder, adjusted to remove hours\nfunction convertMS(value) {\n  const sec = parseInt(value, 10); // convert value to number if it's string\n  let minutes = Math.floor((sec/60)); // get minutes\n  let seconds = sec - (minutes * 60); //  get seconds\n  // add 0 if value < 10; Example: 2 => 02\n  if (minutes < 10) {minutes = \"0\"+minutes;}\n  if (seconds < 10) {seconds = \"0\"+seconds;}\n  return minutes+':'+seconds; // Return is MM : SS\n}\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration,\n    };\n  };\n}\n\n\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(1500);\n  const [breakDuration, setBreakDuration] = useState(300);\n\n\n  //__________________________________________Button Events___________________________________________________________________________________\n  \n  const decreaseFocusDuration = (event) => {\n    //for decreasing focus time\n    if (session === null) {\n      if (focusDuration > 300) {\n        setFocusDuration((focusDuration - 300))\n      }  else {\n        alert(\"knock it off\")\n      }\n    }\n  }\n\n  const increaseFocusDuration = (event) => {\n    //for increasing focus time\n    if (session === null) {\n      if (focusDuration < 3600) {\n        setFocusDuration((focusDuration + 300))\n      }  else {\n        alert(\"knock it off\")\n      }\n    }\n  }\n\n  const decreaseBreakDuration = (event) => {\n    //for decreasing break time\n    if (session === null) {\n      if (breakDuration > 60) {\n        setBreakDuration((breakDuration - 60))\n      }  else {\n        alert(\"knock it off\")\n      }\n    }\n  }\n\n  const increaseBreakDuration = (event) => {\n    //for increasing break time\n    if (session === null) {\n      if (breakDuration < 900) {\n        setBreakDuration((breakDuration + 60))\n      }  else {\n        alert(\"knock it off\")\n      }\n    }\n  }\n\n  \n  const handleStopButton = (event) => {\n    if (session !== null) {\n      setIsTimerRunning(false);\n      setSession(null);\n    } \n  }\n\n\n  function progressbarStyle(){\n    if (session?.label === \"Focusing\") {\n      const amt= focusDuration/session.timeRemaining\n      return `\"${amt}%\"`\n    } else {\n      const amt= breakDuration/session.timeRemaining\n      return `\"${amt}%\"`\n    }\n  }\n\n  //function that toggles timer info for active session\n  function showTime(session) {\n    if (session != null) {\n      return (\n        <div>\n          <div className=\"row mb-2\">\n              <div className=\"col\">\n                {/* Session & Total Session Time*/}\n                <h2 data-testid=\"session-title\">\n                  {session?.label} for \n                  <span> {session?.label === \"Focusing\" ? convertMS(focusDuration) : convertMS(breakDuration)} </span>\n                  minutes\n                </h2>\n                {/* Countdown Timer */}\n                <p className=\"lead\" data-testid=\"session-sub-title\">\n                  {convertMS(session?.timeRemaining)} remaining\n                </p>\n              </div>\n            </div>\n            <div className=\"row mb-2\">\n              <div className=\"col\">\n                <div className=\"progress\" style={{ height: \"20px\" }}>\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                    aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                    style={{ width: {progressbarStyle}}} // TODO: Increase width % as elapsed time increases\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n      )} else {\n        return null;\n      }\n  }\n\n  /* if (session.timeRemaining )\n  // breakDuration / session.timeRemaining   \n  //{session?.label === \"Focusing\" ? focusDuration/session.timeRemaining : breakDuration/session.timeRemaining}\n  function progressbarStyle(){\n    if (session?.label === \"Focusing\") {\n      const amt= focusDuration/session.timeRemaining\n      return `${amt}%`\n    } else {\n      const amt= breakDuration/session.timeRemaining\n      return `${amt}%`\n    }\n  }\n  */\n  //_____________________________________________________________________________________________________-\n\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              Focus Duration: {convertMS(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* Decrease Focus */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={decreaseFocusDuration}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* Increase Focus */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={increaseFocusDuration}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                Break Duration: {convertMS(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* Decrease Break */}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={decreaseBreakDuration}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* Increase Break */}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={increaseBreakDuration}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* Stop Button */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={handleStopButton}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      {/* showTime function - toggles timer display based on session*/}\n      {showTime(session)}\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}